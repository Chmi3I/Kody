// AsystentAI ‚Äì (autor: chmiel)

#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

class AsystentAI {
public:
    void przywitanie() {
        std::cout << "Cze≈õƒá! Jestem AsystentemAI. Pomogƒô Ci z pracƒÖ domowƒÖ.\n";
    }

    void dodajZadanie(const std::string& temat, const std::string& tresc) {
        przypisy.push_back({temat, tresc});
        std::cout << "Dodano nowe zadanie z tematu: " << temat << "\n";
    }

    void pokazPrzypisy() {
        std::cout << "\n=== Lista Przypis√≥w ===\n";
        for (const auto& p : przypisy) {
            std::cout << "Temat: " << p.temat << "\nTre≈õƒá: " << p.tresc << "\n---\n";
        }
    }

    void znajdzTemat(const std::string& szukanyTemat) {
        bool znaleziono = false;
        std::cout << "\nüîç Wyniki wyszukiwania dla: " << szukanyTemat << "\n";
        for (const auto& p : przypisy) {
            if (p.temat.find(szukanyTemat) != std::string::npos) {
                std::cout << "Temat: " << p.temat << "\nTre≈õƒá: " << p.tresc << "\n---\n";
                znaleziono = true;
            }
        }
        if (!znaleziono)
            std::cout << "Brak wynik√≥w dla podanego tematu.\n";
    }

private:
    struct Przypis {
        std::string temat;
        std::string tresc;
    };
    std::vector<Przypis> przypisy;
};

int main() {
    AsystentAI mojAsystent;

    mojAsystent.przywitanie();

    mojAsystent.dodajZadanie("Biologia", "Wyja≈õnij proces fotosyntezy u ro≈õlin.");
    mojAsystent.dodajZadanie("Historia", "Opisz skutki II wojny ≈õwiatowej.");
    mojAsystent.dodajZadanie("Matematyka", "RozwiƒÖ≈º r√≥wnanie kwadratowe: x^2 - 5x + 6 = 0");

    mojAsystent.pokazPrzypisy();

    mojAsystent.znajdzTemat("Biologia");

    return 0;
}